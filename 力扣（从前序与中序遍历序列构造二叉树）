给定两个整数数组 preorder 和 inorder ，其中 preorder 是二叉树的先序遍历， inorder 是同一棵树的中序遍历，请构造二叉树并返回其根节点。

 



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

import java.util.HashMap;

class Solution {
    Map<Integer,Integer> map = new HashMap<>();

    public TreeNode buildTree(int[] preorder, int[] inorder) {
        for(int i = 0;i < inorder.length; ++i)
            map.put(inorder[i],i);
        return build(preorder,0,preorder.length - 1,inorder,0,inorder.length - 1);
    }

    private TreeNode build(int[] preorder,int preleft,int preright,
        int[] inorder,int inleft,int inright){
            if(preleft > preright || inleft > inright)
                return null;

            int root = preorder[preleft];
            int index = map.get(root);


            int count = index - inleft;
            TreeNode node = new TreeNode(root);
            node.left = build(preorder,preleft + 1,preleft + count,inorder,inleft,index - 1);
            node.right = build(preorder,preleft + count + 1,preright,inorder,index + 1,inright);

            return node;
        }
}
