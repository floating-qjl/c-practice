#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <windows.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>
#define LL 3
#define RR 3

int fulling(char arr[LL][RR], int ll, int rr)
{
	int a = 0;
	int b = 0;
	for (a = 0;a < ll;a++)
	{
		for (b = 0;b < rr;b++)
		{
			if (arr[a][b] == ' ')
			{
				return 0;
			}
		}
	}
	return 1;
}
char judge(char arr[LL][RR], int ll, int rr)
{
	int i = 0;	
	for (i = 0;i < ll;i++)
	{
		if (arr[i][0] == arr[i][1] && arr[i][1] == arr[i][2] && arr[i][1] != ' ')
		{
			return arr[i][0];
		}
	}
	for (i = 0;i < rr;i++)
	{
		if (arr[0][i] == arr[1][i] && arr[1][i] == arr[2][i] && arr[1][i] != ' ')
		{
			return arr[0][i];
		}
	}
	if (arr[0][0] == arr[1][1] && arr[1][1] == arr[2][2] && arr[1][1] != ' ')
	{
		return arr[1][1];
	}
	if (arr[2][0] == arr[1][1] && arr[1][1] == arr[0][2] && arr[1][1] != ' ')
	{
		return arr[1][1];
	}
	if (fulling(arr, LL, RR) == 1)
		//1 表示满了 0表示没满
	{
		return 'Q';
	}
	else
	{
		return 'C';
	}
}
void computermove(char arr[LL][RR], int ll, int rr)
{
	int x = 0;
	int y = 0;
	Sleep(1000);
	printf("电脑走\n");
	while (1)
	{
		x = rand() % ll;
		y = rand() % rr;
		if (arr[x][y] == ' ')
		{
			arr[x][y] = '#';
			break;
		}		
	}
}
void playermove(char arr[LL][RR], int ll, int rr)
{
	int x = 0;
	int y = 0;
	Sleep(1000);
	printf("玩家走\n");
	while (1)
	{
		printf("请输入您要走的坐标：");
		scanf("%d %d", &x, &y);
		//判断坐标合法性
		if (x > 0 && x < ll+1 && y > 0 && y < rr+1)
		{
			if (arr[x - 1][y - 1] == ' ')
			{
				arr[x - 1][y - 1] = '*';
				break;
			}
			else
			{
				printf("此坐标已占用\n");
			}
		}
		else
		{
			printf("非法坐标，请重新输入!\n");
		}
	}
}
void board2(char arr[LL][RR],int ll,int rr)
{
	int a = 0;
	int b = 0;
	for (a = 0;a < ll;a++)
	{
		for (b = 0;b < rr;b++)
		{
			printf(" %c ", arr[a][b]);
			if (b < rr - 1)
			{
				printf("|");
			}
		}
		printf("\n");
		if (a < ll - 1)
		{
			for (b = 0;b < rr;b++)
			{
				printf("---");
				if (b < rr - 1)
				{
					printf("|");
				}
			}
			printf("\n");
		}
	}
}
void board1(char arr[LL][RR],int ll,int rr)
{
	int a = 0;
	int b = 0;
	for (a = 0;a < ll;a++)
	{
		for (b = 0;b < rr;b++)
		{
			arr[a][b]=' ';
		}		
	}
}
void game()
{
	char ret;
	char arr[LL][RR] = { 0 };
	//初始化
	board1(arr,LL,RR);
	//打印棋盘
	board2(arr,LL,RR);
	//开始游戏啦
	while (1)
	{
		playermove(arr, LL, RR);
		board2(arr, LL, RR);
		//判断
		ret = judge(arr,LL,RR);
		if (ret != 'C')
		{
			break;
		}
		//电脑
		computermove(arr, LL, RR);
		board2(arr, LL, RR);
		//判断
		ret = judge(arr,LL,RR);
		if (ret != 'C')
		{
			break;
		}				
	}
	if (ret == '*')
	{
		printf("玩家赢\n");		
	}
	else if (ret == '#')
	{
		printf("电脑赢\n");
	}
	else
	{
		printf("平局\n");
	}
	
}
void menu()
{
	printf("###################################\n");
	printf("######  1.play       0.exit  ######\n");
	printf("###################################\n");	
}
void guigui()
{   
	int input = 0;
	system("cls");
	Sleep(1000);
	srand((unsigned int)time(NULL));
	do 
	{

	    menu();
	    printf("你的选择是:>");
	    scanf("%d", &input);
		switch (input)
		{
		case 1:
			system("cls");
			printf("游戏加载中.....\n");
			Sleep(1000);
			printf("游戏正式开始\n");
			Sleep(1000);
			system("cls");
			game();
			break;
		case 0:
			printf("已退出游戏\n");
			break;
		default:
			printf("输入错误，请重新输入!\n");
			break;
		}
	} while (input);
};
int main()
{
	printf("are you ready?\n");
	Sleep(2000);
	printf("游戏开始了\n");
	Sleep(1000);
	guigui();
	return 0;
}
